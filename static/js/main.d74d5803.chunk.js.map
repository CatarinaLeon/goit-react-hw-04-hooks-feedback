{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/App/App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","positivePersentage","propType","PropTypes","number","isRequired","Section","title","children","Notification","message","FeedbackOptions","categories","onClickBtn","map","category","type","onClick","App","useState","state","setState","totalFeedback","prevState","Math","ceil","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEaA,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WAKNL,EAAWM,SAAW,CACpBL,KAAMM,IAAUC,OAAOC,WACvBP,QAASK,IAAUC,OAAOC,WAC1BN,IAAKI,IAAUC,OAAOC,WACtBL,MAAOG,IAAUC,OAAOC,WACxBJ,mBAAoBE,IAAUC,OAAOC,YCvBhC,IAAMC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,oCACE,6BAAKD,IACJC,MCJMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,8BACE,4BAAIA,OCLGC,EAAkB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC5C,OACE,8BACGD,EAAWE,KAAI,SAACC,GAAD,OACd,wBAEEC,KAAK,SACLC,QAAS,kBAAMJ,EAAWE,IAH5B,SAKGA,GAJIA,SC8CAG,EA1CH,WACV,MAA0BC,mBAAS,CAAEtB,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAA/D,mBAAOqB,EAAP,KAAcC,EAAd,KAQMC,EAAgB,WACpB,OAAOF,EAAMvB,KAAOuB,EAAMtB,QAAUsB,EAAMrB,KAOpCF,EAAuBuB,EAAvBvB,KAAMC,EAAiBsB,EAAjBtB,QAASC,EAAQqB,EAARrB,IACvB,OACE,gCACE,uDACA,cAAC,EAAD,CACEa,WAAY,CAAC,OAAQ,UAAW,OAChCC,WApBa,SAACE,GAClBM,GAAS,SAAAE,GACP,OAAO,2BAAKA,GAAZ,kBAAwBR,EAAWQ,EAAUR,GAAY,UAoBzD,cAAC,EAAD,CAASR,MAAO,aAAhB,SACGe,IACC,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAlBDuB,KAAKC,KAAML,EAAMvB,KAAOyB,IAAmB,OAqB5C,cAAC,EAAD,CAAcZ,QAAQ,+BCvChCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d74d5803.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePersentage,\n}) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePersentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propType = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePersentage: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\n\nexport const Notification = ({ message }) => {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","export const FeedbackOptions = ({ categories, onClickBtn }) => {\n  return (\n    <div>\n      {categories.map((category) => (\n        <button\n          key={category}\n          type=\"button\"\n          onClick={() => onClickBtn(category)}\n        >\n          {category}\n        </button>\n      ))}\n    </div>\n  );\n};\n","// import React, { Component } from \"react\";\nimport { useState } from 'react'\n\nimport { Statistics } from \"../Statistics/Statistics\";\nimport { Section } from \"../Section/Section\";\nimport { Notification } from \"../Notification/Notification\";\nimport { FeedbackOptions } from \"../FeedbackOptions/FeedbackOptions\";\n\n\nconst App = () => {\n  const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const onClickBtn = (category) => {\n    setState(prevState => {\n      return { ...prevState, [category]: prevState[category] + 1 };\n    });\n  };\n  \n  const totalFeedback = () => {\n    return state.good + state.neutral + state.bad;\n  };\n\n  const PositiveFeedbackPercentage = () => {\n    return Math.ceil((state.good / totalFeedback()) * 100)\n  };\n\n  const { good, neutral, bad } = state;\n  return (\n    <div>\n      <h1>Please leave feedback</h1>\n      <FeedbackOptions\n        categories={[\"good\", \"neutral\", \"bad\"]}\n        onClickBtn={onClickBtn}\n      />\n      <Section title={\"Statistics\"}>\n        {totalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback()}\n            positivePersentage={PositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n\n// /================================================================================\n\n// export class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   onClickBtn = (category) => {\n//     this.setState({ [category]: this.state[category] + 1 });\n//   };\n\n//   totalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n\n//   PositiveFeedbackPercentage = () => {\n//     const total = this.totalFeedback();\n//     const good = this.state.good;\n//     return total ? Math.ceil((good / total) * 100) : 0;\n//   };\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     return (\n//       <div>\n//         <h1>Please leave feedback</h1>\n//         <FeedbackOptions\n//           categories={[\"good\", \"neutral\", \"bad\"]}\n//           onClickBtn={this.onClickBtn}\n//         />\n//         <Section title={\"Statistics\"}>\n//           {this.totalFeedback() ? (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={this.totalFeedback()}\n//               positivePersentage={this.PositiveFeedbackPercentage()}\n//             />\n//           ) : (\n//             <Notification message=\"There is no feedback\" />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n// export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}